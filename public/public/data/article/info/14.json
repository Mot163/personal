{"code":0,"message":"获取文章简要信息成功!","data":{"id":"14","title":"Java的Lambda表达式","description":"Java的Lambda表达式","cover":"","content":"- Lambda表达式是一个匿名函数，它可以像对象一样传递\n- Lambda表达式能避免内部类定义过多\n- Lambda表达式属于函数式编程的概念\n- 代码案例：\n\n```java\n// 函数接口（只包含唯一一个抽象方法的接口）\ninterface Medium {\n    void print();\n}\ninterface Medium2 {\n    void printNum(int num);\n}\n\n// Lambda表达式\npublic class Lambda {\n\n    public static void main(String[] args) {\n\n        Medium medium;\n\n        // 匿名类\n        medium = new Medium(){\n            @Override\n            public void print() {\n                System.out.println(\"匿名类~~~\");\n            }\n        };\n        medium.print();\n\n        // 无参Lambda表达式1\n        medium = () -> {\n            System.out.println(\"无参Lambda表达式1~~~\");\n        };\n        medium.print();\n\n        // 无参Lambda表达式2，适用于方法只有一条语句\n        medium = () -> System.out.println(\"无参Lambda表达式2~~~\");\n        medium.print();\n\n        System.out.println(\"--------------------------------\");\n\n        Medium2 medium2;\n        int num5 = 5;\n\n        // 匿名类\n        medium2 = new Medium2(){\n            @Override\n            public void printNum(int num) {\n                System.out.println(\"匿名类~~~,num的值为\"+num);\n            }\n        };\n        medium2.printNum(num5);\n\n        // 有参Lambda表达式1\n        medium2 = (num) -> {\n            System.out.println(\"有参Lambda表达式1~~~,num的值为\"+num);\n        };\n        medium2.printNum(num5);\n\n        // 有参Lambda表达式2，适用于方法只有一条语句\n        medium2 = (num) -> System.out.println(\"有参Lambda表达式2~~~,num的值为\"+num);\n        medium2.printNum(num5);\n\n        // 有参Lambda表达式3，适用于方法只有一个传递参数\n        medium2 = num -> System.out.println(\"有参Lambda表达式3~~~,num的值为\"+num);\n        medium2.printNum(num5);\n\n        System.out.println(\"结束\");\n\n        /*\n         结果：\n         匿名类~~~\n         无参Lambda表达式1~~~\n         无参Lambda表达式2~~~\n         --------------------------------\n         匿名类~~~,num的值为5\n         有参Lambda表达式1~~~,num的值为5\n         有参Lambda表达式2~~~,num的值为5\n         有参Lambda表达式3~~~,num的值为5\n         结束\n         */\n\n    }\n\n}\n```\n\n","categoryId":"1","categoryName":"技术记录","tags":[{"id":"2","name":"Java"}],"views":3,"topping":false,"status":1,"createTime":"2022-10-24 20:54:42"}}